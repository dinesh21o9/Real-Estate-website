import React, { useState, useEffect } from "react";
import axios from "axios";
import "./combined-auth.css"; // Import your CSS file here
import { Link } from "react-router-dom";

const CombinedAuth = () => {
  const [done, setDone] = useState(false);

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    password: "",
    passwordConfirmation: "",
    page: "userLogin", // Initialize the page state to "userLogin"
  });

  const [error, setError] = useState("");
  const [isSignUp, setIsSignUp] = useState(false);

  const handleToggleMode = () => {
    setIsSignUp(!isSignUp);
  };
  
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    //SIGNUP PART
    if (isSignUp) {
      setFormData({ ...formData, page: "signup" }); // Set the page variable in formData to "signup"

      const { name, email, password, passwordConfirmation } = formData;

      if (!name || !email || !password || !passwordConfirmation) {
        setError("Please fill in all the fields");
        return;
      }

      if (password !== passwordConfirmation) {
        setError("Passwords do not match");
        return;
      }

      axios
        .post("http://localhost:80/api/signup/", formData)
        .then(function (response) {
          if (response.data.status) {
            setDone(true);
          } else {
            setError("Provided Email has an account!");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          setError("An error occurred. Please try again.");
        });
    } 
    //LOGIN PART
    else {
      setFormData({ ...formData, page: "userLogin" }); // Set the page variable in formData to "login"

      if (!formData.email || !formData.password) {
        setError("Please enter both email and password");
        return;
      }

      axios
        .post("http://localhost:80/api/login/", formData)
        .then(function (response) {

          if (response.data.status) {
            
            //jwt is in response.data.token
            window.token = response.data.token;
            console.log(window.token);
            setDone(true);
          } else {
            setError("Invalid Credentials");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          setError("An error occurred. Please try again.");
        });
    }
  };

  // const handleLogin = (e) => {
  //   e.preventDefault();
  //   setFormData({ ...formData, page: "userLogin" }); // Set the page variable in formData to "login"

  //   if (!formData.email || !formData.password) {
  //     setError("Please enter both email and password");
  //     return;
  //   }

  //   axios
  //     .post("http://localhost:80/api/login/", formData)
  //     .then(function (response) {

  //       if (response.data.status) {
          
  //         //jwt is in response.data.token
  //         window.token = response.data.token;
  //         console.log(window.token);
  //         setDone(true);
  //       } else {
  //         setError("Invalid Credentials");
  //       }
  //     })
  //     .catch((error) => {
  //       console.error("Error:", error);
  //       setError("An error occurred. Please try again.");
  //     });
  // };

  // const handleSignUp = (e) => {
  //   e.preventDefault();
  //   setFormData({ ...formData, page: "signup" }); // Set the page variable in formData to "signup"

  //   const { name, email, password, passwordConfirmation } = formData;

  //   if (!name || !email || !password || !passwordConfirmation) {
  //     setError("Please fill in all the fields");
  //     return;
  //   }

  //   if (password !== passwordConfirmation) {
  //     setError("Passwords do not match");
  //     return;
  //   }

  //   axios
  //     .post("http://localhost:80/api/signup/", formData)
  //     .then(function (response) {
  //       if (response.data.status) {
  //         setDone(true);
  //       } else {
  //         setError("Provided Email has an account!");
  //       }
  //     })
  //     .catch((error) => {
  //       console.error("Error:", error);
  //       setError("An error occurred. Please try again.");
  //     });
  // };

  return (
    <div className={`combined-Auth-container ${isSignUp ? "combined-Auth-sign-up-mode" : ""}`}>
      {done ? (
        <div>
          <p className="combined-Auth-success-message">Authentication successful.</p>
          <span className="combined-Auth-login-message">You can now</span>
          <Link to="/post" className="combined-Auth-login-link">
            Post
          </Link>
        </div>
      ) : (
        <div>
          <div className="combined-Auth-forms-container">
            <div className="combined-Auth-signin-signup">
              <form
                className={isSignUp ? "combined-Auth-sign-up-form" : "combined-Auth-sign-in-form"}
                onSubmit={handleSubmit}
              >
                <h2 className="combined-Auth-title">{isSignUp ? "Sign up" : "Sign in"}</h2>
                {isSignUp && (
                  <div className="combined-Auth-input-field">
                    <i className="fas fa-user"></i>
                    <input
                      type="text"
                      placeholder="Username"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                    />
                  </div>
                )}
                <div className="combined-Auth-input-field">
                  <i className="fas fa-envelope"></i>
                  <input
                    type="email"
                    placeholder="Email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                  />
                </div>
                <div className="combined-Auth-input-field">
                  <i className="fas fa-lock"></i>
                  <input
                    type="password"
                    placeholder="Password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                  />
                </div>
                {isSignUp && (
                  <div className="combined-Auth-input-field">
                    <i className="fas fa-lock"></i>
                    <input
                      type="password"
                      placeholder="Confirm Password"
                      name="passwordConfirmation"
                      value={formData.passwordConfirmation}
                      onChange={handleChange}
                    />
                  </div>
                )}
                <input
                  type="hidden" // Add a hidden input field for the page variable
                  name="page"
                  value={formData.page}
                />
                <input
                  type="submit"
                  className="combined-Auth-btn"
                  value={isSignUp ? "Sign up" : "Login"}
                />
              </form>
            </div>
          </div>

          <div className="combined-Auth-panels-container">
            <div className={`combined-Auth-panel left-panel ${isSignUp ? "sign-up-mode" : ""}`}>
              {/* Left panel content */}
              <div className="combined-Auth-content">
                <h3>New here ?</h3>
                <p>
                  Lorem ipsum, dolor sit amet consectetur adipisicing elit.
                  Debitis, ex ratione. Aliquid!
                </p>
                <button
                  className="combined-Auth-btn combined-Auth-transparent"
                  onClick={handleToggleMode}
                >
                  Sign up
                </button>
              </div>
            </div>
            <div className={`combined-Auth-panel right-panel ${isSignUp ? "sign-up-mode" : ""}`}>
              {/* Right panel content */}
              <div className="combined-Auth-content">
                <h3>One of us ?</h3>
                <p>
                  Lorem ipsum dolor sit amet consectetur adipisicing elit.
                  Nostrum laboriosam ad deleniti.
                </p>
                <button
                  className="combined-Auth-btn combined-Auth-transparent"
                  onClick={handleToggleMode}
                >
                  Sign in
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CombinedAuth;






              <form className="combined-Auth-sign-ip-form" onSubmit={handleSubmit}>

                <h2 className="combined-Auth-title">Sign in</h2>

                <div className="combined-Auth-input-field">
                  <i className="fas fa-envelope"></i>
                  <input
                    type="email"
                    placeholder="Email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                  />
                </div>
                <div className="combined-Auth-input-field">
                  <i className="fas fa-lock"></i>
                  <input
                    type="password"
                    placeholder="Password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                  />
                </div>

                <!-- <input
                  type="hidden" // Add a hidden input field for the page variable
                  name="page"
                  value={formData.page}
                /> -->
                <input
                  type="submit"
                  className="combined-Auth-btn"
                  value="Login"
                />
              </form>

              <form className="combined-Auth-sign-up-form" onSubmit={handleSubmit}>

                <h2 className="combined-Auth-title">Sign up</h2>
              
                <div className="combined-Auth-input-field">
                  <i className="fas fa-user"></i>
                  <input
                    type="text"
                    placeholder="Username"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                  />
                </div>
                <div className="combined-Auth-input-field">
                  <i className="fas fa-envelope"></i>
                  <input
                    type="email"
                    placeholder="Email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                  />
                </div>
                <div className="combined-Auth-input-field">
                  <i className="fas fa-lock"></i>
                  <input
                    type="password"
                    placeholder="Password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                  />
                </div>
                <div className="combined-Auth-input-field">
                  <i className="fas fa-lock"></i>
                  <input
                    type="password"
                    placeholder="Confirm Password"
                    name="passwordConfirmation"
                    value={formData.passwordConfirmation}
                    onChange={handleChange}
                  />
                </div>

                <!-- <input
                  type="hidden" // Add a hidden input field for the page variable
                  name="page"
                  value={formData.page}
                /> -->
                <input
                  type="submit"
                  className="combined-Auth-btn"
                  value="Sign up"
                />
              </form>